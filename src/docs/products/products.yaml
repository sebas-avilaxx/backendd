paths:
  /api/products:
    get:
      summary: Get all products
      description: Get all producs without any filter, they are stored inside payload array
      tags:
      - "products"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create a new product
      description: Create a new product
      tags:
      - "products"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/products/{pid}:
    put:
      summary: Update an existing product
      description: Update an existing product by ID. Parameters sent in body will be updated
      tags:
      - "products"
      parameters:
        - name: pid
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      summary: Delete a product
      description: Delete a product by ID
      tags:
      - "products"
      parameters:
        - name: pid
          in: path
          description: ID of the product to delete. You need to be logged in to delete a product
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    get:
      summary: Get a product by ID
      description: Get a product by ID
      tags:
      - "products"
      parameters:
        - name: pid
          in: path
          description: ID of the product to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not Found
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Autogenerated by MongoDB
        title:
          type: string
        description:
          type: string
        price:
          type: number
        code:
          type: string
        thumbnails:
          type: array
          items:
            type: string
        stock:
          type: integer
        status:
          type: boolean
        category:
          type: string
        owner:
          type: string
          description: ID from the user who created the product
          
